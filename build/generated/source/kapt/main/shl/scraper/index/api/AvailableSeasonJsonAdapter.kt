// Code generated by moshi-kotlin-codegen. Do not edit.
package shl.scraper.index.api

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.internal.Util
import java.lang.NullPointerException
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.collections.emptySet
import kotlin.text.buildString

@Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION")
class AvailableSeasonJsonAdapter(
  moshi: Moshi
) : JsonAdapter<AvailableSeason>() {
  private val options: JsonReader.Options = JsonReader.Options.of("id", "season")

  private val intAdapter: JsonAdapter<Int> = moshi.adapter(Int::class.java, emptySet(), "leagueId")

  override fun toString(): String = buildString(37) {
      append("GeneratedJsonAdapter(").append("AvailableSeason").append(')') }

  override fun fromJson(reader: JsonReader): AvailableSeason {
    var leagueId: Int? = null
    var season: Int? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> leagueId = intAdapter.fromJson(reader) ?: throw Util.unexpectedNull("leagueId", "id",
            reader)
        1 -> season = intAdapter.fromJson(reader) ?: throw Util.unexpectedNull("season", "season",
            reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return AvailableSeason(
        leagueId = leagueId ?: throw Util.missingProperty("leagueId", "id", reader),
        season = season ?: throw Util.missingProperty("season", "season", reader)
    )
  }

  override fun toJson(writer: JsonWriter, value: AvailableSeason?) {
    if (value == null) {
      throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("id")
    intAdapter.toJson(writer, value.leagueId)
    writer.name("season")
    intAdapter.toJson(writer, value.season)
    writer.endObject()
  }
}
